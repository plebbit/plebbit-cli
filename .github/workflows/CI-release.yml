name: "CI Release"
on:
  workflow_run:
    workflows:
      - "CI build"
    types:
      - "completed"
jobs:
  # Generate and upload executables to Github releases
  generate-upload-tarballs-x64:
    name: Generate and upload tarballs for Linux x64
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt update && sudo apt install -y gcc g++ make git build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev libfontconfig1 fontconfig libfontconfig1-dev libfontconfig nsis p7zip
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Get latest release tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Generate tarballs
        run: yarn generate:executable:tarballs:x64
      - name: Rename tarballs and installers
        run: yarn ts-node config/rename_tarballs_installers.ts
      - name: Upload tarballs to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: "*.tar.gz"
          file_glob: true
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true

  generate-upload-tarballs-arm64:
    name: Generate and upload tarballs for Arm64 Linux and Macos
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-latest # should use arm64 arch
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Get latest release tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Generate tarballs
        run: generate:executable:tarballs:arm64
      - name: Rename tarballs and installers
        run: yarn ts-node config/rename_tarballs_installers.ts
      - name: Upload tarballs to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: "*.tar.gz"
          file_glob: true
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true

  generate-upload-windows-tarballs-installers:
    name: Generate and upload windows installers and tarballs
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Get latest release tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Generate Windows installer
        run: yarn generate:installer:windows
      - name: Generate Windows tarballs
        run: yarn generate:executable:tarballs:windows
      - name: Rename tarballs and installers
        run: yarn ts-node config/rename_tarballs_installers.ts
      - name: Upload windows installers to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: "*.exe"
          file_glob: true
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true
      - name: Upload windows tarballs to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: "*.tar.gz"
          file_glob: true
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true
