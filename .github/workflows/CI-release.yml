name: 'CI Release'
on:
  workflow_run:
    workflows:
      - 'CI build'
    types:
      - 'completed'
jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Create Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn semantic-release
  
  # Generate binary executable
# Create tar.gz (or .zip for windows) with install.sh
  upload-executables:
    name: ${{ matrix.os }}-${{ matrix.arch }}
    needs: 'release'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: ['x64']
        include:
          - os: ubuntu-latest
            arch: 'arm64'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: 'Get latest release tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: 'Store pkg-compliant Windows OS name'
        if: runner.os == 'Windows'
        run: echo "win" >> $GITHUB_ENV
      - name: 'Store pkg-compliant Linux and MacOS name'
        if: runner.os != 'Windows'
        run: echo "osPkg=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Generate ${{ runner.os }}-${{ matrix.arch }} executable
        run: mkdir temp && yarn pkg . -t node16-${{ env.osPkg }}-${{ matrix.arch }} --output-path temp/ -o plebbit
      - name: Move and rename generated binary (windows)
        if: runner.os == 'Windows'
        run: echo "exe=plebbit_${{ steps.previoustag.outputs.tag }}_${{ env.osPkg }}-${{ matrix.arch }}.exe" >> $GITHUB_ENV

      - name: Move and rename generated binary (MacOS/Linux)
        if: runner.os != 'Windows'
        run: echo "exe=plebbit_${{ steps.previoustag.outputs.tag }}_${{ env.osPkg }}-${{ matrix.arch }}" >> $GITHUB_ENV
      - run: mv temp/plebbit ${{ env.exe }}
      - name: Upload Binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{ env.exe }}

